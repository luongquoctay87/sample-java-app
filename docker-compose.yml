version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./src/main/resources/db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend
    restart: unless-stopped

  api-service:
    container_name: api-service
    build:
      context: ./
      dockerfile: Dockerfile
    environment:
      - DB_URL=postgres
      - DB_PORT=5432
      - DB_NAME=crm_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
    ports:
      - "8080:8080"
      - "5005:5005"
    depends_on:
      - postgres
    networks:
      - backend

  prometheus:
    image: "prom/prometheus"
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - backend

  grafana:
    image: "grafana/grafana"
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - backend

networks:
  backend:
    name: api-network
volumes:
  postgres:
